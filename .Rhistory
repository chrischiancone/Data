#  tile border mapped to density
#################################
map.seattle_city +
stat_density2d(data=df.seattle_crime, aes(x=Longitude
, y=Latitude
,color=..density..
,size=ifelse(..density..<=1,0,..density..)
,alpha=..density..)
,geom="tile",contour=F) +
scale_color_continuous(low="orange", high="red", guide = "none") +
scale_size_continuous(range = c(0, 3), guide = "none") +
scale_alpha(range = c(0,.5), guide="none") +
ggtitle("Seattle Crime") +
theme(plot.title = element_text(family="Trebuchet MS", size=36, face="bold", hjust=0, color="#777777"))
#################################
# TILED version
#  tile border mapped to density
#################################
map.seattle_city +
stat_density2d(data=df.seattle_crime, aes(x=Longitude
, y=Latitude
,color=..density..
,size=ifelse(..density..<=1,0,..density..)
,alpha=..density..)
,geom="tile",contour=F) +
scale_color_continuous(low="orange", high="red", guide = "none") +
scale_size_continuous(range = c(0, 3), guide = "none") +
scale_alpha(range = c(0,.5), guide="none") +
ggtitle("Seattle Crime") +
theme(plot.title = element_text(family="Trebuchet MS", size=36, face="bold", hjust=0, color="#777777"))
#################################
# TILED version
#  tile border mapped to density
#################################
map.seattle_city +
stat_density2d(data=df.seattle_crime, aes(x=Longitude
, y=Latitude
,color=..density..
,size=ifelse(..density..<=1,0,..density..)
,alpha=..density..)
,geom="tile",contour=F) +
scale_color_continuous(low="orange", high="red", guide = "none") +
scale_size_continuous(range = c(0, 3), guide = "none") +
scale_alpha(range = c(0,.5), guide="none") +
ggtitle("Seattle Crime") +
theme(plot.title = element_text(family="Arial", size=36, face="bold", hjust=0, color="#777777"))
#############################
# ADD TRANSPARENCY and COLOR
#############################
map.seattle_city +
geom_point(data=df.seattle_crime, aes(x=Longitude, y=Latitude), color="dark green", alpha=.03, size=1.1)
?stat_density2d
#################################
# TILED version
#  tile border mapped to density
#################################
map.seattle_city +
stat_density2d(data=df.seattle_crime, aes(x=Longitude
, y=Latitude
,color=..density..
,size=ifelse(..density..<=1,0,..density..)
,alpha=..density..)
,geom="density2d",contour=TRUE) +
scale_color_continuous(low="orange", high="red", guide = "none") +
scale_size_continuous(range = c(0, 3), guide = "none") +
scale_alpha(range = c(0,.5), guide="none") +
ggtitle("Seattle Crime") +
theme(plot.title = element_text(family="Arial", size=36, face="bold", hjust=0, color="#777777"))
#################################
# TILED version
#  tile border mapped to density
#################################
map.seattle_city +
stat_density2d(data=df.seattle_crime, aes(x=Longitude
, y=Latitude
,color=..density..
,size=ifelse(..density..<=1,0,..density..)
,alpha=..density..)
,contour=TRUE) +
scale_color_continuous(low="orange", high="red", guide = "none") +
scale_size_continuous(range = c(0, 3), guide = "none") +
scale_alpha(range = c(0,.5), guide="none") +
ggtitle("Seattle Crime") +
theme(plot.title = element_text(family="Arial", size=36, face="bold", hjust=0, color="#777777"))
#################################
# TILED version
#  tile border mapped to density
#################################
map.seattle_city +
stat_density2d(data=df.seattle_crime, aes(x=Longitude
, y=Latitude
,color=..density..
,size=ifelse(..density..<=1,0,..density..)
,alpha=..density..)
,geom="tile",contour=F) +
scale_color_continuous(low="orange", high="red", guide = "none") +
scale_size_continuous(range = c(0, 3), guide = "none") +
scale_alpha(range = c(0,.5), guide="none") +
ggtitle("Seattle Crime") +
theme(plot.title = element_text(family="Arial", size=36, face="bold", hjust=0, color="#777777"))
library(ggplot2)
#################################
# GET CRIME DATA AND SF GEO DATA
#################################
#------------------------------------------
# Download the zipped SF crime data (2014)
#  and save it to the working directory
#------------------------------------------
download.file("http://www.sharpsightlabs.com/wp-content/uploads/2014/12/sf_crime_YTD-2014-12_REDUCED.txt.zip", destfile="sf_crime_YTD-2014-12_REDUCED.txt.zip")
#------------------------------
# Unzip the SF crime data file
#------------------------------
unzip("sf_crime_YTD-2014-12_REDUCED.txt.zip")
#------------------------------------
# Read crime data into an R dataframe
#------------------------------------
df.sf_crime <- read.csv("sf_crime_YTD-2014-12_REDUCED.txt")
#------------------------------
# Download water boundaries
#  and neighborhood boundaries
#------------------------------
df.sf_neighborhoods <- read.csv(url("http://www.sharpsightlabs.com/wp-content/uploads/2014/12/sf_neighborhood_boundaries.txt"))
df.sf_water <- read.csv(url("http://www.sharpsightlabs.com/wp-content/uploads/2014/12/sf_water_boundaries.txt"))
################
# PLOT THE DATA
################
ggplot() +
geom_polygon(data=df.sf_neighborhoods,aes(x=long,y=lat,group=group) ,fill="#404040",colour= "#5A5A5A", lwd=0.05) +
geom_polygon(data=df.sf_water, aes(x=long, y=lat, group=group),colour= "#708090", fill="#708090") +
geom_point(data=df.sf_crime, aes(x=df.sf_crime$X, y=df.sf_crime$Y), color="#FFFF3309", fill="#FFFF3309", size=1.3) +
geom_polygon(data=df.sf_neighborhoods, aes(x=long,y=lat, group=group) ,fill=NA,colour= "#DDDDDD55", lwd=.3) +
ggtitle("San Francisco Crime (2014)") +
theme(panel.background = element_rect(fill="#708090")) +
theme(axis.title = element_blank()) +
theme(axis.text = element_blank()) +
theme(axis.ticks = element_blank()) +
theme(panel.grid = element_blank()) +
theme(plot.title = element_text(family="Trebuchet MS", size=38, face="bold", hjust=0, color="#777777"))
df.sf_neighborhoods <- read.csv(url("http://www.sharpsightlabs.com/wp-content/uploads/2014/12/sf_neighborhood_boundaries.txt"))
df.sf_water <- read.csv(url("http://www.sharpsightlabs.com/wp-content/uploads/2014/12/sf_water_boundaries.txt"))
df.sf_crime <- read.csv("sf_crime_YTD-2014-12_REDUCED.txt")
df.sf_crime <- read.csv("sf_water_boundaries.txt")
#############################
# ADD TRANSPARENCY and COLOR
#############################
map.seattle_city +
geom_point(data=df.seattle_crime, aes(x=Longitude, y=Latitude), color="dark green", alpha=.03, size=1.1
)
map.seattle_city <- qmap("mckinney", zoom = 11, source="stamen", maptype="toner",darken = c(.3,"#BBBBBB"))
map.seattle_city
Str(df.seattle_crime)
str(df.seattle_crime)
load.package("twitteR")
load.packages("twitteR")
load.packages("twitteR")
install.packages("twitteR")
# get recent public tweets
public_tweets = publicTimeline()
today_trends = getTrends(period = "daily", date=Sys.Date())
library(twitteR)
# get trending topics of the day
# (returns top 20 trending topics per hour for given data)
today_trends = getTrends(period = "daily", date=Sys.Date())
public_tweets = publicTimeline()
today_trends = getTrends(period = "daily", date=Sys.Date())
# retrieve the first 100 tweets (or all tweets if fewer than 100)
# from the user timeline of @rdatammining
rdmTweets <- userTimeline("rdatamining", n=100)
n <- length(rdmTweets)
rdmTweets[1:3]
rdmTweets <- userTimeline("rdatamining", n=100)
#*****install packages, uncomment if you do not have the packages************************
#install.packages("dplyr")
#install.packages("tidyr")
#install.packages("data.table")
#****Set Working Directory*************************************************************
WorkingDir <- "C:/Users/cchianco/Dropbox/R/Class3/Project/Data/"
DataWorkingDir <- "C:/Users/cchianco/Dropbox/R/Class3/Project/Data/UCI Data"
setwd(WorkingDir)
#*****Load Packages for Project********************************************************
library(dplyr)
library(data.table)
library(tidyr)
#*****Load files, train and test********************************************************
Sub_Train <- tbl_df(read.table(file.path(DataWorkingDir, "train", "subject_Train.txt")))
Sub_Test  <- tbl_df(read.table(file.path(DataWorkingDir, "test" , "SUBJECT_test.txt" )))
Y_Train <- tbl_df(read.table(file.path(DataWorkingDir, "train", "Y_train.txt")))
Y_Test  <- tbl_df(read.table(file.path(DataWorkingDir, "test" , "Y_test.txt" )))
X_Train <- tbl_df(read.table(file.path(DataWorkingDir, "train", "X_train.txt" )))
X_Test  <- tbl_df(read.table(file.path(DataWorkingDir, "test" , "X_test.txt" )))
Feature <- tbl_df(read.table(file.path(DataWorkingDir, "features.txt")))
Labels<- tbl_df(read.table(file.path(DataWorkingDir, "activity_labels.txt")))
#*****Merge the data*******************************************************************
library(dplyr)
library(data.table)
Merge_Sub <- rbind(Sub_Train, Sub_Test)
Merge_Act<- rbind(Y_Train, Y_Test)
Merge_Train <- rbind(X_Train, X_Test)
print("Pulled In Merged data")
#*****Rename column names**************************************************************
setnames(Merge_Sub, "V1", "SUBJECT")
setnames(Merge_Act, "V1", "ACTIVITY_NUMBER")
setnames(Feature, names(Feature), c("FEATURE_NUMBER", "FEATURE_NAME"))
setnames(Labels, names(Labels), c("ACTIVITY_NUMBER","activityName"))
colnames(Merge_Train) <- Feature$FEATURE_NAME
print("Renamed the columns")
#*****Merge all data cclumns**********************************************************
Sub_Act_Comb<- cbind(Merge_Sub, Merge_Act)
Merge_Train <- cbind(Sub_Act_Comb, Merge_Train)
#*****Grab the mean and standard deviation********************************************
Features_Mean_SD <- grep("mean\\(\\)|std\\(\\)",Feature$FEATURE_NAME,value=TRUE) #var name
Features_Mean_SD <- union(c("SUBJECT","ACTIVITY_NUMBER"), Features_Mean_SD)
Merge_Train<- subset(Merge_Train,select=Features_Mean_SD)
Merge_Train
head(Merge_Train)
summary(Merge_Train)
Merge_Train <- merge(Labels, Merge_Train , by="ACTIVITY_NUMBER", all.x=TRUE)
Merge_Train$ACTIVITY_NAME <- as.character(Merge_Train$ACTIVITY_NAME)
#*****install packages, uncomment if you do not have the packages************************
#install.packages("dplyr")
#install.packages("tidyr")
#install.packages("data.table")
#****Set Working Directory*************************************************************
WorkingDir <- "C:/Users/cchianco/Dropbox/R/Class3/Project/Data/"
DataWorkingDir <- "C:/Users/cchianco/Dropbox/R/Class3/Project/Data/UCI Data"
setwd(WorkingDir)
#*****Load Packages for Project********************************************************
library(dplyr)
library(data.table)
library(tidyr)
# Read SUBJECT files
Sub_Train <- tbl_df(read.table(file.path(filesPath, "train", "SUBJECT_train.txt")))
Sub_Test  <- tbl_df(read.table(file.path(filesPath, "test" , "SUBJECT_test.txt" )))
#*****install packages, uncomment if you do not have the packages************************
#install.packages("dplyr")
#install.packages("tidyr")
#install.packages("data.table")
#****Set Working Directory*************************************************************
WorkingDir <- "C:/Users/cchianco/Dropbox/R/Class3/Project/Data/"
setwd(WorkingDir)
#*****Load Packages for Project********************************************************
library(dplyr)
DataWorkingDir <- "C:/Users/cchianco/Dropbox/R/Class3/Project/Data/UCI Data"
library(data.table)
library(tidyr)
Sub_Train <- tbl_df(read.table(file.path(DataWorkingDir, "train", "SUBJECT_train.txt")))
Sub_Test  <- tbl_df(read.table(file.path(DataWorkingDir, "test" , "SUBJECT_test.txt" )))
# Read SUBJECT files
# Read activity files
Y_Train <- tbl_df(read.table(file.path(DataWorkingDir, "train", "Y_train.txt")))
Y_Test  <- tbl_df(read.table(file.path(DataWorkingDir, "test" , "Y_test.txt" )))
#Read data files.
X_Train <- tbl_df(read.table(file.path(DataWorkingDir, "train", "X_train.txt" )))
X_Test  <- tbl_df(read.table(file.path(DataWorkingDir, "test" , "X_test.txt" )))
# for both Activity and SUBJECT files this will merge the training and the test sets by row binding
#and rename variables "SUBJECT" and "AVTIVITY_NUMBER"
Merge_Sub <- rbind(Sub_Train, Sub_Test)
setnames(Merge_Sub, "V1", "SUBJECT")
Merge_Act<- rbind(Y_Train, Y_Test)
setnames(Merge_Act, "V1", "AVTIVITY_NUMBER")
#combine the DATA training and test files
Merge_Train<- rbind(X_Train, X_Test)
# name variables according to feature e.g.(V1 = "tBodyAcc-mean()-X")
Features <- tbl_df(read.table(file.path(DataWorkingDir, "features.txt")))
setnames(Features, names(Features), c("FEATURE_NUMBER", "FEATURE_NAME"))
colnames(Merge_Act) <- Features$FEATURE_NAME
#column names for activity labels
activityLabels<- tbl_df(read.table(file.path(DataWorkingDir, "activity_labels.txt")))
setnames(activityLabels, names(activityLabels), c("AVTIVITY_NUMBER","activityName"))
# Merge columns
alldataSubjAct<- cbind(Merge_Sub, Merge_Act)
Merge_Train<- cbind(alldataSubjAct, Merge_Act)
# Reading "features.txt" and extracting only the mean and standard deviation
FeaturesMeanStd <- grep("mean\\(\\)|std\\(\\)",Features$FEATURE_NAME,value=TRUE) #var name
# Taking only measurements for the mean and standard deviation and add "SUBJECT","AVTIVITY_NUMBER"
FeaturesMeanStd <- union(c("SUBJECT","AVTIVITY_NUMBER"), FeaturesMeanStd)
Merge_Act<- subset(Merge_Act,select=FeaturesMeanStd)
##enter name of activity into Merge_Act
Merge_Train<- merge(activityLabels, Merge_Train, by="AVTIVITY_NUMBER", all.x=TRUE)
Merge_Act$activityName <- as.character(Merge_Act$activityName)
## create Merge_Trainwith variable means sorted by SUBJECT and Activity
Merge_Act$activityName <- as.character(Merge_Act$activityName)
dataAggr<- aggregate(. ~ SUBJECT - activityName, data = Merge_Act, m
#Names before
head(str(Merge_Act),2)
#*****install packages, uncomment if you do not have the packages************************
#install.packages("dplyr")
#install.packages("tidyr")
#install.packages("data.table")
#****Set Working Directory*************************************************************
WorkingDir <- "C:/Users/cchianco/Dropbox/R/Class3/Project/Data/"
DataWorkingDir <- "C:/Users/cchianco/Dropbox/R/Class3/Project/Data/UCI Data"
#*****Load Packages for Project********************************************************
setwd(WorkingDir)
library(dplyr)
library(data.table)
library(tidyr)
# Read SUBJECT files
Sub_Train <- tbl_df(read.table(file.path(DataWorkingDir, "train", "SUBJECT_train.txt")))
Sub_Test  <- tbl_df(read.table(file.path(DataWorkingDir, "test" , "SUBJECT_test.txt" )))
# Read activity files
Y_Train <- tbl_df(read.table(file.path(DataWorkingDir, "train", "Y_train.txt")))
Y_Test  <- tbl_df(read.table(file.path(DataWorkingDir, "test" , "Y_test.txt" )))
#Read data files.
X_Train <- tbl_df(read.table(file.path(DataWorkingDir, "train", "X_train.txt" )))
X_Test  <- tbl_df(read.table(file.path(DataWorkingDir, "test" , "X_test.txt" )))
# for both Activity and SUBJECT files this will merge the training and the test sets by row binding
#and rename variables "SUBJECT" and "AVTIVITY_NUMBER"
Merge_Sub <- rbind(Sub_Train, Sub_Test)
setnames(Merge_Sub, "V1", "SUBJECT")
Merge_Act<- rbind(Y_Train, Y_Test)
setnames(Merge_Act, "V1", "AVTIVITY_NUMBER")
#combine the DATA training and test files
Merge_Train<- rbind(X_Train, X_Test)
# name variables according to feature e.g.(V1 = "tBodyAcc-mean()-X")
Feature <- tbl_df(read.table(file.path(DataWorkingDir, "Feature.txt")))
setnames(Feature, names(Feature), c("FEATURE_NUMBER", "FEATURE_NAME"))
Feature <- tbl_df(read.table(file.path(DataWorkingDir, "Feature.txt")))
#*****install packages, uncomment if you do not have the packages************************
#install.packages("dplyr")
#install.packages("tidyr")
#install.packages("data.table")
#****Set Working Directory*************************************************************
WorkingDir <- "C:/Users/cchianco/Dropbox/R/Class3/Project/Data/"
DataWorkingDir <- "C:/Users/cchianco/Dropbox/R/Class3/Project/Data/UCI Data"
setwd(WorkingDir)
#*****Load Packages for Project********************************************************
library(dplyr)
library(data.table)
library(tidyr)
#*****Load files, train and test********************************************************
Sub_Train <- tbl_df(read.table(file.path(DataWorkingDir, "train", "SUBJECT_train.txt")))
Sub_Test  <- tbl_df(read.table(file.path(DataWorkingDir, "test" , "SUBJECT_test.txt" )))
Y_Train <- tbl_df(read.table(file.path(DataWorkingDir, "train", "Y_train.txt")))
Y_Test  <- tbl_df(read.table(file.path(DataWorkingDir, "test" , "Y_test.txt" )))
X_Train <- tbl_df(read.table(file.path(DataWorkingDir, "train", "X_train.txt" )))
X_Test  <- tbl_df(read.table(file.path(DataWorkingDir, "test" , "X_test.txt" )))
Feature <- tbl_df(read.table(file.path(DataWorkingDir, "Feature.txt")))
Labels<- tbl_df(read.table(file.path(DataWorkingDir, "activity_labels.txt")))
#****Set Working Directory*************************************************************
WorkingDir <- "C:/Users/cchianco/Dropbox/R/Class3/Project/Data/"
DataWorkingDir <- "C:/Users/cchianco/Dropbox/R/Class3/Project/Data/UCI Data"
setwd(WorkingDir)
#*****Load Packages for Project********************************************************
library(dplyr)
library(data.table)
library(tidyr)
#*****Load files, train and test********************************************************
Sub_Train <- tbl_df(read.table(file.path(DataWorkingDir, "train", "SUBJECT_train.txt")))
Sub_Test  <- tbl_df(read.table(file.path(DataWorkingDir, "test" , "SUBJECT_test.txt" )))
Y_Train <- tbl_df(read.table(file.path(DataWorkingDir, "train", "Y_train.txt")))
Y_Test  <- tbl_df(read.table(file.path(DataWorkingDir, "test" , "Y_test.txt" )))
X_Train <- tbl_df(read.table(file.path(DataWorkingDir, "train", "X_train.txt" )))
X_Test  <- tbl_df(read.table(file.path(DataWorkingDir, "test" , "X_test.txt" )))
Feature <- tbl_df(read.table(file.path(DataWorkingDir, "Feature.txt")))
Labels<- tbl_df(read.table(file.path(DataWorkingDir, "activity_labels.txt")))
#*****Merge the data*******************************************************************
Sub_Train <- tbl_df(read.table(file.path(DataWorkingDir, "train", "subject_train.txt")))
Sub_Test  <- tbl_df(read.table(file.path(DataWorkingDir, "test" , "subject_test.txt" )))
Y_Train <- tbl_df(read.table(file.path(DataWorkingDir, "train", "Y_train.txt")))
Y_Test  <- tbl_df(read.table(file.path(DataWorkingDir, "test" , "Y_test.txt" )))
X_Train <- tbl_df(read.table(file.path(DataWorkingDir, "train", "X_train.txt" )))
X_Test  <- tbl_df(read.table(file.path(DataWorkingDir, "test" , "X_test.txt" )))
Feature <- tbl_df(read.table(file.path(DataWorkingDir, "Feature.txt")))
Labels<- tbl_df(read.table(file.path(DataWorkingDir, "activity_labels.txt")))
#*****Merge the data*******************************************************************
Merge_Sub <- rbind(Sub_Train, Sub_Test)
Merge_Act<- rbind(Y_Train, Y_Test)
Merge_Train<- rbind(X_Train, X_Test)
print("Pulled In Merged data")
setnames(Merge_Sub, "V1", "SUBJECT")
setnames(Merge_Act, "V1", "AVTIVITY_NUMBER")
setnames(Feature, names(Feature), c("FEATURE_NUMBER", "FEATURE_NAME"))
setnames(activityLabels, names(activityLabels), c("AVTIVITY_NUMBER","ACTIVITY_Name"))
colnames(Merge_Act) <- Feature$FEATURE_NAME
print("Renamed the columns")
#*****Merge all data cclumns**********************************************************
Sub_Act_Comb<- cbind(Merge_Sub, Merge_Act)
Merge_Train<- cbind(Sub_Act_Comb, Merge_Act)
FeatureMeanStd <- grep("mean\\(\\)|std\\(\\)",Feature$FEATURE_NAME,value=TRUE) #var name
FeatureMeanStd <- union(c("SUBJECT","AVTIVITY_NUMBER"), FeatureMeanStd)
Merge_Act<- subset(Merge_Act,select=FeatureMeanStd)
Merge_Act
FeatureMeanStd
FeatureMeanStd <- grep("mean\\(\\)|std\\(\\)",Feature$FEATURE_NAME,value=TRUE) #var name
FeatureMeanStd <- union(c("SUBJECT","AVTIVITY_NUMBER"), FeatureMeanStd)
Merge_Act<- subset(Merge_Act,select=FeatureMeanStd)
#*****install packages, uncomment if you do not have the packages************************
#install.packages("dplyr")
#install.packages("tidyr")
#install.packages("data.table")
#****Set Working Directory*************************************************************
WorkingDir <- "C:/Users/cchianco/Dropbox/R/Class3/Project/Data/"
DataWorkingDir <- "C:/Users/cchianco/Dropbox/R/Class3/Project/Data/UCI Data"
setwd(WorkingDir)
library(dplyr)
library(data.table)
#*****Load Packages for Project********************************************************
library(tidyr)
#*****Load files, train and test********************************************************
Sub_Train <- tbl_df(read.table(file.path(DataWorkingDir, "train", "subject_train.txt")))
Sub_Test  <- tbl_df(read.table(file.path(DataWorkingDir, "test" , "subject_test.txt" )))
Y_Train <- tbl_df(read.table(file.path(DataWorkingDir, "train", "Y_train.txt")))
Y_Test  <- tbl_df(read.table(file.path(DataWorkingDir, "test" , "Y_test.txt" )))
X_Train <- tbl_df(read.table(file.path(DataWorkingDir, "train", "X_train.txt" )))
X_Test  <- tbl_df(read.table(file.path(DataWorkingDir, "test" , "X_test.txt" )))
Feature <- tbl_df(read.table(file.path(DataWorkingDir, "Feature.txt")))
Labels<- tbl_df(read.table(file.path(DataWorkingDir, "activity_labels.txt")))
#*****Merge the data*******************************************************************
Merge_Sub <- rbind(Sub_Train, Sub_Test)
Merge_Act<- rbind(Y_Train, Y_Test)
Merge_Train<- rbind(X_Train, X_Test)
print("Pulled In Merged data")
#*****Rename column names**************************************************************
setnames(Merge_Sub, "V1", "SUBJECT")
setnames(Merge_Act, "V1", "AVTIVITY_NUMBER")
setnames(Feature, names(Feature), c("FEATURE_NUMBER", "FEATURE_NAME"))
setnames(activityLabels, names(activityLabels), c("AVTIVITY_NUMBER","ACTIVITY_Name"))
colnames(Merge_Act) <- Feature$FEATURE_NAME
print("Renamed the columns")
#*****Merge all data cclumns**********************************************************
Sub_Act_Comb<- cbind(Merge_Sub, Merge_Act)
Merge_Train<- cbind(Sub_Act_Comb, Merge_Act)
#*****Grab the mean and standard deviation********************************************
FeatureMeanStd <- grep("mean\\(\\)|std\\(\\)",Feature$FEATURE_NAME,value=TRUE) #var name
FeatureMeanStd <- union(c("SUBJECT","AVTIVITY_NUMBER"), FeatureMeanStd)
Feature <- tbl_df(read.table(file.path(DataWorkingDir, "feature.txt")))
Feature <- tbl_df(read.table(file.path(DataWorkingDir, "feature.txt")))
Feature <- tbl_df(read.table(file.path(DataWorkingDir, "features.txt")))
Labels<- tbl_df(read.table(file.path(DataWorkingDir, "activity_labels.txt")))
#*****Merge the data*******************************************************************
Merge_Sub <- rbind(Sub_Train, Sub_Test)
Merge_Act<- rbind(Y_Train, Y_Test)
Merge_Train<- rbind(X_Train, X_Test)
print("Pulled In Merged data")
#*****Rename column names**************************************************************
setnames(Merge_Sub, "V1", "SUBJECT")
WorkingDir <- "C:/Users/cchianco/Dropbox/R/Class3/Project/Data/"
DataWorkingDir <- "C:/Users/cchianco/Dropbox/R/Class3/Project/Data/UCI Data"
setwd(WorkingDir)
#*****Load Packages for Project********************************************************
library(dplyr)
library(data.table)
library(tidyr)
#*****Load files, train and test********************************************************
Sub_Train <- tbl_df(read.table(file.path(DataWorkingDir, "train", "subject_train.txt")))
Sub_Test  <- tbl_df(read.table(file.path(DataWorkingDir, "test" , "subject_test.txt" )))
Y_Train <- tbl_df(read.table(file.path(DataWorkingDir, "train", "Y_train.txt")))
Y_Test  <- tbl_df(read.table(file.path(DataWorkingDir, "test" , "Y_test.txt" )))
X_Train <- tbl_df(read.table(file.path(DataWorkingDir, "train", "X_train.txt" )))
X_Test  <- tbl_df(read.table(file.path(DataWorkingDir, "test" , "X_test.txt" )))
Feature <- tbl_df(read.table(file.path(DataWorkingDir, "features.txt")))
Labels<- tbl_df(read.table(file.path(DataWorkingDir, "activity_labels.txt")))
#*****Merge the data*******************************************************************
Merge_Sub <- rbind(Sub_Train, Sub_Test)
Merge_Act<- rbind(Y_Train, Y_Test)
Merge_Train<- rbind(X_Train, X_Test)
print("Pulled In Merged data")
#*****Rename column names**************************************************************
setnames(Merge_Sub, "V1", "SUBJECT")
setnames(Merge_Act, "V1", "AVTIVITY_NUMBER")
setnames(Feature, names(Feature), c("FEATURE_NUMBER", "FEATURE_NAME"))
setnames(activityLabels, names(activityLabels), c("AVTIVITY_NUMBER","ACTIVITY_Name"))
setnames(activityLabels, names(Labels), c("AVTIVITY_NUMBER","ACTIVITY_Name"))
setnames(Labels, names(Labels), c("AVTIVITY_NUMBER","ACTIVITY_Name"))
colnames(Merge_Act) <- Feature$FEATURE_NAME
WorkingDir <- "C:/Users/cchianco/Dropbox/R/Class3/Project/Data/"
DataWorkingDir <- "C:/Users/cchianco/Dropbox/R/Class3/Project/Data/UCI Data"
setwd(WorkingDir)
#*****Load Packages for Project********************************************************
library(dplyr)
library(data.table)
library(tidyr)
#*****Load files, train and test********************************************************
Sub_Train <- tbl_df(read.table(file.path(DataWorkingDir, "train", "subject_train.txt")))
Sub_Test  <- tbl_df(read.table(file.path(DataWorkingDir, "test" , "subject_test.txt" )))
Y_Train <- tbl_df(read.table(file.path(DataWorkingDir, "train", "Y_train.txt")))
Y_Test  <- tbl_df(read.table(file.path(DataWorkingDir, "test" , "Y_test.txt" )))
X_Train <- tbl_df(read.table(file.path(DataWorkingDir, "train", "X_train.txt" )))
X_Test  <- tbl_df(read.table(file.path(DataWorkingDir, "test" , "X_test.txt" )))
Feature <- tbl_df(read.table(file.path(DataWorkingDir, "features.txt")))
Labels<- tbl_df(read.table(file.path(DataWorkingDir, "activity_labels.txt")))
#*****Merge the data*******************************************************************
Merge_Sub <- rbind(Sub_Train, Sub_Test)
Merge_Act<- rbind(Y_Train, Y_Test)
Merge_Train<- rbind(X_Train, X_Test)
print("Pulled In Merged data")
#*****Rename column names**************************************************************
setnames(Merge_Sub, "V1", "SUBJECT")
setnames(Merge_Act, "V1", "AVTIVITY_NUMBER")
setnames(Feature, names(Feature), c("FEATURE_NUMBER", "FEATURE_NAME"))
setnames(Labels, names(Labels), c("AVTIVITY_NUMBER","ACTIVITY_Name"))
colnames(Merge_Act) <- Feature$FEATURE_NAME
Merge_Act
Feature$FEATURE_NAME
colnames(Merge_Act)
Sub_Act_Comb<- cbind(Merge_Sub, Merge_Act)
Merge_Train<- cbind(Sub_Act_Comb, Merge_Act)
#*****Grab the mean and standard deviation********************************************
FeatureMeanStd <- grep("mean\\(\\)|std\\(\\)",Feature$FEATURE_NAME,value=TRUE) #var name
FeatureMeanStd <- union(c("SUBJECT","AVTIVITY_NUMBER"), FeatureMeanStd)
Merge_Act<- subset(Merge_Act,select=FeatureMeanStd)
##enter name of activity into Merge_Act
Merge_Train<- merge(Labels, Merge_Train, by="AVTIVITY_NUMBER", all.x=TRUE)
Merge_Act$ACTIVITY_NAME <- as.character(Merge_Act$ACTIVITY_NAME)
## create Merge_Trainwith variable means sorted by SUBJECT and Activity
Merge_Act$ACTIITY_NAME <- as.character(Merge_Act$ACTIVITY_NAME)
Agg_Data<- aggregate(. ~ SUBJECT - ACTIVITY_NAME, data = Merge_Act, m
#Names before
head(str(Merge_Act),2)
head(Merge_Act)
str(Merge_Act)
